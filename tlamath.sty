% To use TLA+ abbreviations in `beamer`, designate the slides as fragile.
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{tlamath}
\usepackage{amsmath}
\usepackage{etoolbox}
\usepackage{mdframed}
\usepackage{stmaryrd}  % used to define `\dbr`
% Clean up definitions before loading `tlaplus.sty`
% in order to avoid conflicts.
%
% `\proof` is defined in:
% `ieeeconf.cls`
% `amsthm`
% `beamer`
\ifdef{\proof}{
    \typeout{WARNING: "proof" already defined, to be deleted}
    \let\proof\undefined}{}
\ifdef{\endproof}{
    \typeout{WARNING: "endproof" already defined, to be deleted}
    \let\endproof\undefined}{}
% `\qed` is defined in:
% `beamer`
\ifdef{\qed}{
    \typeout{WARNING: "qed" already defined, to be deleted}
    \let\qed\undefined}{}
% `\QED` s defined in:
% `ieeeconf.cls`
\ifdef{\QED}{
    \typeout{WARNING: "QED" already defined, to be deleted}
    \let\QED\undefined}{}
% `\implies` is defined in:
% `amsthm`
\ifdef{\implies}{
    \typeout{WARNING: "implies" already defined, to be deleted}
    \let\implies\undefined}{}
%
% DO NOT USE `hyperref`, because it causes problems with `tla2texplus-book`
% \usepackage[math]{fontspec}  % destroys both the math italics of `abbrev`, as well as indentation
% \usepackage{hypertlabook} % causes too many errors
% operators
\let\always\undefined
\newcommand{\always}{\Box}
\def\ev{\eventually}
\def\NONE{\textsc{none}}
\newcommand{\tuple}[1]{\langle#1\rangle}
\newcommand{\str}[1]{``#1\text{''}}
\newcommand{\tlastr}[1]{\textsf{``{#1}''}}

\makeatletter
\def\strictarrow{%
    \stackrel{\mbox{%
        \raisebox{-.3em}[0pt][0pt]{$\scriptscriptstyle\mathrm{sr}\;\,$}}}{%
            -\hspace{-.16em}\triangleright}}
\makeatother
\newcommand{\whilenow}{{-\hspace{-.16em}\triangleright}}
\def\tlaplus{TLA\textsuperscript{+}}
\newcommand{\Cl}{\mathcal{C}}
\newcommand{\dbr}[1]{\llbracket #1 \rrbracket}
\DeclareMathOperator{\Ebeh}{\E_{ behavior }}
\DeclareMathOperator{\Abeh}{\A_{ behavior }}
\def\choose{\textsc{choose}}
\newcommand{\ZFNEW}{\textsc{zf new }}

\newcommand{\eqtla}[1]{
\begin{equation}
\begin{aligned}
\nonumber
#1
\end{aligned}
\end{equation}
}


% definitions for writing algorithms
\def\Def{\textbf{def}\ }
\def\While{\textbf{while}\ }
\def\If{\textbf{if}\ }
\def\Then{\textbf{then}\ }
\def\Else{\textbf{else}\ }
\def\Return{\textbf{return}\ }
\def\Break{\textbf{break}\ }
\newcommand{\Procedure}[1]{\textsc{#1}}
\newcommand{\acomment}[1]{\tlacomment{(* #1 *)}}
\newcommand{\algolabel}[1]{\label[algorithm]{#1}}%
\crefname{algorithm}{Algo.}{Algs.}%
